name: Build container and deploy
on:
  push:
    branches:
      - 'main'
      - 'feature/dockerize' # temporary
    tags:
      - 'v*'
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEPLOY_URL: https://he2.srv.awuerfel.de/deploy
  
jobs:
  docker-build-and-push:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: generate docker tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=dev,enable=${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/feature/dockerize')}}
            type=ref,event=tag,enable=true
          
          labels: |
            org.opencontainers.image.title=Contest Result Analyzer
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
      
      - name: docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: self-hosted
    needs: docker-build-and-push
    steps:
      - name: run deployment
        shell: bash
        env:
          DEPLOY_TOKEN_DEV: ${{ secrets.DEPLOY_TOKEN_DEV }}
          DEPLOY_TOKEN_PROD: ${{ secrets.DEPLOY_TOKEN_PROD }}
          IS_DEV: ${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/feature/dockerize')}}
        run: |
          DEPLOY_TOKEN=$([ "$IS_DEV" == "true" ] && echo "$DEPLOY_TOKEN_DEV" || echo "$DEPLOY_TOKEN_PROD")
          curl -sSN -H "Authorization: Bearer $DEPLOY_TOKEN" -X POST "$DEPLOY_URL" | tee output.txt

          # Check the output file for the string "FAILURE"
          if grep -q "FAILURE" output.txt; then
            echo "Deployment failed. FAILURE detected in output."
            exit 1
          else
            echo "Deployment successful."
          fi
